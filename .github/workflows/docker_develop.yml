name: Develop - build image and push
# This workflow builds and pushes a Docker image to GitHub Container Registry
# and optionally to Docker Hub.
# It runs nightly at 2 AM UTC and can also be triggered manually.
# The image is tagged with "nightly" and the repository owner is converted to lowercase.
# The workflow uses the GITHUB_TOKEN secret for authentication with GitHub Container Registry.
# Uncomment the Docker Hub section if you want to push to Docker Hub as well.
# The Docker Hub credentials should be stored in the repository secrets as DOCKER_USERNAME and DOCKER_PASSWORD.
# The workflow is triggered on a schedule and can also be run manually.

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch: # allows manual triggering of the workflow

env:
  VERSION_PREFIX: develop-v0.0.

jobs:
  publish_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version string
        run: echo "VERSION=${{ env.VERSION_PREFIX }}${{ github.run_number }}" >> $GITHUB_ENV

      - name: Convert repository owner to lowercase
        run: echo "owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build image
        run: docker build -t ghcr.io/${{ env.owner }}/eos_connect:develop .

      # Only upload the image artifact for pull_request events
      - name: Upload Docker image as artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: eos_connect_image-${{ env.VERSION }}
          path: eos_connect_${{ env.VERSION }}.tar.gz

      # Only run tagging and pushing tasks for "push" events
      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag image with develop version
        if: github.event_name == 'push'
        run: docker tag ghcr.io/${{ env.owner }}/eos_connect:develop ghcr.io/${{ env.owner }}/eos_connect:${{ env.VERSION }}

      - name: Push Docker image to GitHub Container Registry
        if: github.event_name == 'push'
        run: |
          docker push ghcr.io/${{ env.owner }}/eos_connect:develop
          docker push ghcr.io/${{ env.owner }}/eos_connect:${{ env.VERSION }}

  cleanup_old_develops:
      needs: publish_image
      runs-on: ubuntu-latest
      steps:
        - name: Delete old develop versions
          env:
            GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            # Fetch all versions of the container
            versions=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
              https://ghcr.io/v2/${{ github.repository_owner }}/eos_connect/tags/list | jq -r '.tags[] | select(startswith(\"${VERSION_PREFIX}\"))" | sort -r)

            # Keep the latest 3 versions
            keep=$(echo "$versions" | head -n 3)

            # Delete older versions
            for version in $(echo "$versions" | tail -n +4); do
              echo "Deleting version: $version"
              curl -X DELETE -H "Authorization: Bearer $GHCR_TOKEN" \
                https://ghcr.io/v2/${{ github.repository_owner }}/eos_connect/manifests/$version
            done